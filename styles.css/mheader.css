
.cabeçalho__menu-hamburguer {
    /*width, que é a largura e um height, que é a altura*/
    width: 24px;
    height: 24px;
    background-image: url("../img/Menum.svg");/*O header.css está dentro da pasta styles, se não colocássemos dois pontos, ele ia procurar uma pasta img dentro da pasta styles, que não existe. Então, com os dois pontos, ele voltou para a pasta AluraBooks, conseguiu ir à pasta img e achou o menu.svg*/
    background-repeat: no-repeat;
    background-position: center;
    display: inline-block; /*O display, nós colocamos inline-block, porque se ele fosse só inline, não permitiria esses ajustes de altura e largura. Então, colocamos inline-block, o que nos permitiu alterar a altura, e agora ele está aparecendo corretamente no menu.*/
}

.container__botao:checked ~ .container__rotulo >.cabeçalho__menu-hamburguer {
    background-image: url(/meu/img/menu_black.svg);

}

.container__botao:checked ~ .container__rotulo {
    background:var(--azul-degrade);
}

.cabeçalho{
    background-color: var(--branco);
    display: flex; /*. Isso acontece porque o display flex transformou o cabeçalho em um flex container e seus "filhos", que no caso são as divs containers, viraram flex items. */
    justify-content: space-between;
    align-items: center;
    position:relative;
}

.container {
    display: flex;
     align-items: center;
}

.container_imagem {
    padding: 1em;
}

.lista-menu {
    background-color: var(--branco);
    display: none;
    position:absolute;
    top:100%;
    width:60vw; /*o width é a largura, e a medida vw é o viewport width. Então, ele pega a largura da nossa tela. */
}

.container__botao:checked~.lista-menu {
     display: block;
}
.lista-menu__titulo{
    color: var(--laranja);
    font-weight: 700;
}

.lista-menu__item{
padding: 1em;
background-color: var(--branco);

}

.lista-menu__titulo {
    color: var(--laranja);
    font-weight: 700;
}

.lista-menu__link{
background: var(--azul-degrade);
-webkit-background-clip: text;
-webkit-text-fill-color: transparent;
background-clip: text;
text-transform:uppercase;
text-decoration: none;

}

.container__botao {
    display: none;
}


/*A estrutura é a seguinte: usamos @media para indicar que é um media query. O screen é um tipo de mídia, e queremos dizer que é a tela. Deixaremos um artigo na seção "Para Saber Mais" para entender melhor por que inserimos screen. Em seguida, temos and (min-width: 1024px), o que significa que o mínimo da largura da tela deve ser 1024px, o tamanho que definimos como designer.
Geralmente, quando fazemos layouts com mobile first, usamos min-width. Chegando ao mínimo do tamanho da tela de 1024px, ele vai aplicar os estilos ali de dentro. Caso faça desktop first, comece no tamanho do computador e depois vá diminuindo, você usa max-width. O max-width se aplica quando o tamanho da tela é no máximo aquele tamanho. Mas é uma questão de convenção, usamos max quando é desktop e min quando é mobile.*/

/* @media serve para dizer ao CSS que estamos criando um media query e quer dizer que vamos nos comunicar com o CSS perguntando alguma coisa. O screen significa tela, então estamos trabalhando com a tela que acessa a página. O and é para agregar a tela ao (min-width: 1024px), ou seja, a tela tem tamanho mínimo de 1024px;*/

.container__titulo{
    display: none;
}

.opções{
    display:none;
}

.container__texto {
    display: none;
}


@media screen and (min-width: 1024px) {

    .container__titulo,
    .container__titulo--negrito {
        font-family: var(--fonte-secundario);
        font-size: 30px;
    }

    .container__titulo {
        font-weight: 400;
        display: block;
    }

    .container__titulo--negrito {
        font-weight: 700;
    }

    .opções {
        display: flex;
    }

    .opções__item {
        padding: 0 1em;
        text-transform: uppercase;
    }

    .opções__link {
        text-decoration: none;
        color: var(--preto);
    }

    .container__imagem-transparente {
        display: none;
    }

    .cabeçalho__menu-hamburguer {
        display: none;
    }

    .opções__botão:checked~.lista-menu {
        display: block;
        width: auto;
    }

    .opções__botão {
        display: none;
    }

    .opções__botão:checked~.opções__rotulo>.opções__item {
        background: var(--azul-degrade);
        color: var(--branco);
    }

    .opções__item {
        padding: 2em 1em;
    }

    .lista-menu__item:hover {
        background: var(--azul-degrade);
    }

    .lista-menu__item:hover>.lista-menu__link {
        -webkit-text-fill-color: var(--branco);
        text-decoration: none;
    }

}

@media screen and (min-width: 1728px) {
    .container__link {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: var(--preto);
    }

    .cabeçalho {
        padding: 0 2em;
    }

    .opções {
        margin-right: auto;
    }

    .container__texto {
        display: block;
    }
}